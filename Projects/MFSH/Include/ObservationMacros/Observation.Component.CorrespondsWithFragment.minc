/*
 Observation 'Corresponds With' Component Fragment
 Adds CorrespondsWith component
*/
 

#Fragment: Observation.Component.CorrespondsWithFragment
#Parent: Observation
#Title: "Corresponds With Fragment"
#Description: """
# 'Corresponds With' Component Fragment
# Adds CorrespondsWith component
# """
  #apply Observation.Component.Add("correspondsWith", "0..*", "Corresponds With", "Abnormality Corresponds With",
  #	 """
  #  This slice contains the optional components that define what this observation corresponds with.
  #  The value of this component is a codeable concept chosen from the CorrespondsWithVS valueset.
  #	 """,
  #  "ObservationComponentSliceCodesCS#correspondsWith")
  #
  #apply Observation.Component.SetConcept("correspondsWith", "1..1", "CorrespondsWithVS")

  #// -----------------------------------------
  #// Graph Macros
  #// -----------------------------------------
  #use Graph
    #apply once NodeFragment("%FTitle%")
    #apply LinkByName("frag", "^%FragmentId%/$", "^%ProfileId%/$", "1", "Cmp")
  #end


  #// -----------------------------------------
  #// IG Macros
  #// -----------------------------------------
  #use IG
    #apply once IntroDocFragment("""
    # <p>
    # <b>%FTitle%</b>
    # </p>
    #""")
    #apply once GroupMemberFragment("Fragments", "%FTitle%")
  #end

  #// -----------------------------------------
  #// Code API Macros
  #// -----------------------------------------
  #use ApiBuild
    #apply once DefineFragment()
    #apply ImplementFragment()
  #end
#end
